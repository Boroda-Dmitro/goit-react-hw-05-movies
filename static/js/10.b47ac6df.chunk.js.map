{"version":3,"file":"static/js/10.b47ac6df.chunk.js","mappings":"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","sources":["Pages/MovieDetails/MovieDetails.jsx","Servises/fetchMovies.jsx"],"sourcesContent":["import { fetchMovieById } from 'Servises/fetchMovies';\nimport { Loader } from 'components/Loader/Loader';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Outlet } from 'react-router-dom';\n\nconst IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w200/';\nlet genres = [];\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLocation = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    const getMovie = async () => {\n      const movieInfo = await fetchMovieById(movieId);\n      genres = movieInfo.genres.map(genre => genre.name).join(' ');\n      setMovie(movieInfo);\n    };\n\n    getMovie();\n  }, [movieId]);\n\n  const releaseYear = new Date(movie.release_date).getFullYear();\n  const userScore = Math.floor(movie.vote_average * 10);\n  \n  return (\n    <div>\n      <Link to={backLocation.current}>Go back</Link>\n      <div className=\"img-box\">\n        <img src={IMAGES_BASE_URL + movie.poster_path} alt={movie.title} />\n      </div>\n      <div className=\"info-box\">\n        <h2>\n          {movie.title} ({releaseYear})\n        </h2>\n        <p>User Score: {userScore} %</p>\n        <h3>Overview</h3>\n        <p>{movie.overview}</p>\n        <h4>Genres</h4>\n        <p>{genres}</p>\n      </div>\n      <div>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n          <Suspense fallback={<Loader/>}>\n            <Outlet />\n          </Suspense>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nexport const fetchTrendingMovies = async () => {\n  const URL = 'https://api.themoviedb.org/3/trending/all/day';\n  const KEY = 'efcd079eaa7382b8a49b8fa3c0261e85';\n\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n  try {\n    const TrendingMovies = await axios.get(`${URL}?${options}`);\n    return TrendingMovies.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n\nexport const fetchMovieById = async (id) => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}`;\n  const KEY = 'efcd079eaa7382b8a49b8fa3c0261e85';\n\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n\n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n\n\nexport const fetchMovieCast = async (id) => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}/credits`;\n  const KEY = 'efcd079eaa7382b8a49b8fa3c0261e85';\n\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n\n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieReviews = async (id) => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}/reviews`;\n  const KEY = 'efcd079eaa7382b8a49b8fa3c0261e85';\n\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n\n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchSerchMovies = async (search) => {\n  const URL = `https://api.themoviedb.org/3/search/movie`;\n  const KEY = 'efcd079eaa7382b8a49b8fa3c0261e85';\n  \n  const options = new URLSearchParams({\n    api_key: KEY,\n    query: search,\n  });\n  \n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n"],"names":["genres","useState","movie","setMovie","movieId","useParams","location","useLocation","backLocation","useRef","state","from","useEffect","getMovie","fetchMovieById","movieInfo","map","genre","name","join","releaseYear","Date","release_date","getFullYear","userScore","Math","floor","vote_average","to","current","className","src","poster_path","alt","title","overview","Suspense","fallback","fetchTrendingMovies","options","URLSearchParams","api_key","axios","TrendingMovies","data","results","console","log","id","URL","fetchMovieCast","fetchMovieReviews","fetchSerchMovies","search","query"],"sourceRoot":""}