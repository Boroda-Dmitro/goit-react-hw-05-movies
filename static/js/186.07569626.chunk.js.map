{"version":3,"file":"static/js/186.07569626.chunk.js","mappings":"+SAEaA,EAAmB,mCAAG,4FACrB,gDACA,mCAENC,EAAU,IAAIC,gBAAgB,CAClCC,QAHU,qCAFqB,kBAQFC,EAAAA,EAAAA,IAAA,UAPnB,gDAOmB,YAAoBH,IARlB,cAQzBI,EARyB,yBASxBA,EAAeC,KAAKC,SATI,kCAW/BC,QAAQC,IAAR,MAX+B,0DAAH,qDAgBnBC,EAAc,mCAAG,WAAOC,GAAP,kFACtBC,EADsB,6CACsBD,GACtC,mCAENV,EAAU,IAAIC,gBAAgB,CAClCC,QAHU,qCAFgB,kBASNC,EAAAA,EAAAA,IAAA,UAAaQ,EAAb,YAAoBX,IATd,cASpBY,EAToB,yBAUnBA,EAAMP,MAVa,kCAY1BE,QAAQC,IAAR,MAZ0B,0DAAH,sDAkBdK,EAAc,mCAAG,WAAOH,GAAP,kFACtBC,EADsB,6CACsBD,EADtB,YAEhB,mCAENV,EAAU,IAAIC,gBAAgB,CAClCC,QAHU,qCAFgB,kBASNC,EAAAA,EAAAA,IAAA,UAAaQ,EAAb,YAAoBX,IATd,cASpBY,EAToB,yBAUnBA,EAAMP,MAVa,kCAY1BE,QAAQC,IAAR,MAZ0B,0DAAH,sDAgBdM,EAAiB,mCAAG,WAAOJ,GAAP,kFACzBC,EADyB,6CACmBD,EADnB,YAEnB,mCAENV,EAAU,IAAIC,gBAAgB,CAClCC,QAHU,qCAFmB,kBASTC,EAAAA,EAAAA,IAAA,UAAaQ,EAAb,YAAoBX,IATX,cASvBY,EATuB,yBAUtBA,EAAMP,MAVgB,kCAY7BE,QAAQC,IAAR,MAZ6B,0DAAH,sDAgBjBO,EAAgB,mCAAG,WAAOC,GAAP,2HAElB,mCAENhB,EAAU,IAAIC,gBAAgB,CAClCC,QAHU,mCAIVe,MAAOD,IANqB,kBAURb,EAAAA,EAAAA,IAAA,UAVQ,4CAUR,YAAoBH,IAVZ,cAUtBY,EAVsB,yBAWrBA,EAAMP,KAAKC,SAXU,kCAa5BC,QAAQC,IAAR,MAb4B,0DAAH,qD,yGClC7B,UA9BgB,WACd,OAA8BU,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OATAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,qGACIV,EAAAA,EAAAA,IAAkBO,GADtB,OACjBI,EADiB,OAEvBL,EAAWK,EAAanB,SAFD,2CAAH,qDAKtBkB,GACD,GAAE,CAACH,IAEmB,IAAnBF,EAAQO,QACH,sEAIP,wBACGP,EAAQQ,KAAI,SAAAC,GACX,OACE,2BACE,qCAAaA,EAAOC,WACpB,uCAAeD,EAAOE,aAFfF,EAAOlB,GAKnB,KAGN,C","sources":["Servises/fetchMovies.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const fetchTrendingMovies = async () => {\n  const URL = 'https://api.themoviedb.org/3/trending/all/day';\n  const KEY = 'efcd079eaa7382b8a49b8fa3c0261e85';\n\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n  try {\n    const TrendingMovies = await axios.get(`${URL}?${options}`);\n    return TrendingMovies.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n\nexport const fetchMovieById = async (id) => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}`;\n  const KEY = 'efcd079eaa7382b8a49b8fa3c0261e85';\n\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n\n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n\n\nexport const fetchMovieCast = async (id) => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}/credits`;\n  const KEY = 'efcd079eaa7382b8a49b8fa3c0261e85';\n\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n\n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieReviews = async (id) => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}/reviews`;\n  const KEY = 'efcd079eaa7382b8a49b8fa3c0261e85';\n\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n\n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchSerchMovies = async (search) => {\n  const URL = `https://api.themoviedb.org/3/search/movie`;\n  const KEY = 'efcd079eaa7382b8a49b8fa3c0261e85';\n  \n  const options = new URLSearchParams({\n    api_key: KEY,\n    query: search,\n  });\n  \n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n","import { fetchMovieReviews } from 'Servises/fetchMovies';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    const getMovietReviews = async () => {\n      const movieReviews = await fetchMovieReviews(movieId);\n      setReviews(movieReviews.results);\n    };\n\n    getMovietReviews();\n  }, [movieId]);\n\n  if (reviews.length === 0) {\n    return <p>We don't have any reviews for this movie </p>;\n  }\n\n  return (\n    <ul>\n      {reviews.map(review => {\n        return (\n          <li key={review.id}>\n            <h4>Author: {review.author}</h4>\n            <p>Charecter: {review.content}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["fetchTrendingMovies","options","URLSearchParams","api_key","axios","TrendingMovies","data","results","console","log","fetchMovieById","id","URL","movie","fetchMovieCast","fetchMovieReviews","fetchSerchMovies","search","query","useState","reviews","setReviews","movieId","useParams","useEffect","getMovietReviews","movieReviews","length","map","review","author","content"],"sourceRoot":""}